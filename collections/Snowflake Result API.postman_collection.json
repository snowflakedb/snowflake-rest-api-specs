{
	"info": {
		"_postman_id": "b86bdb7f-0f59-47b1-be7b-16afcfea2962",
		"name": "Snowflake Result API",
		"description": "The Snowflake Result API is a REST API that you can use to check request status and fetch request response.\n\nContact Support:\n Name: Snowflake, Inc.\n Email: support@snowflake.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43111250"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v2",
					"item": [
						{
							"name": "results",
							"item": [
								{
									"name": "{result_handler}",
									"item": [
										{
											"name": "Check result status or fetch request",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"results",
														":result_handler"
													],
													"query": [
														{
															"key": "page",
															"value": "0",
															"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
														}
													],
													"variable": [
														{
															"key": "result_handler",
															"value": "<string>",
															"description": "(Required) The opaque result id."
														}
													]
												},
												"description": "Get result status or the result when it is ready."
											},
											"response": [
												{
													"name": "successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														},
														{
															"key": "Link",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Successfully accepted the request, but it is not completed yet.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Location",
															"value": "<string>",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"resultHandler\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Request Timeout. This indicates that the request from the client timed out and was not completed by the server.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/results/:result_handler?page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"results",
																":result_handler"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of the page of results to return. The number can range from 0 to the total number of pages minus 1."
																}
															],
															"variable": [
																{
																	"key": "result_handler"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Snowflake-Request-ID",
															"value": "",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"code\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://org-account.snowflakecomputing.com"
		}
	]
}